{"version":3,"sources":["webpack://vr-file-upload-preview/./demo/examples/vr-file-uploader.html","webpack://vr-file-upload-preview/./demo/examples/vr-file-uploader.js","webpack://vr-file-upload-preview/webpack/bootstrap","webpack://vr-file-upload-preview/./src/utils/dom.js","webpack://vr-file-upload-preview/./src/utils/event.js","webpack://vr-file-upload-preview/./src/index.js","webpack://vr-file-upload-preview/./src/utils/file.js","webpack://vr-file-upload-preview/./demo/index.js"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","changeAttributes","element","attributes","forEach","attr","onlyAttr","value","setAttribute","name","removeAttribute","createElement","tag","content","property","node","document","length","classes","classList","add","styles","Object","assign","style","textContent","dispatchEvent","event","detail","CustomEvent","bubbles","composed","VR_FILE_CLASS","customElements","define","e","inputRef","click","changeHandler","removeHandler","filesHandler","dataTransfer","files","uploadRef","remove","this","getAttribute","parseInt","isNaN","render","rendered","defaultEventListners","dragOnDropEventListners","oldValue","newValue","buildPreviewPanel","containerRef","addEventListener","onRemove","shadowRoot","attachShadow","mode","slot","multiple","dropzone","accept","maxFiles","maxSize","display","appendChild","insertAdjacentElement","assignedNodes","setEventListners","target","dataset","block","querySelector","closest","filter","file","Array","from","cache","index","errorType","errorHandler","type","some","size","buildTemplate","push","count","replace","split","match","preview","reader","FileReader","onload","insertAdjacentHTML","getTemplatePreviewImage","result","readAsDataURL","source","getShortName","bytes","i","Math","floor","log","round","pow","getSize","set","action","onSelect","onChange","eventName","preventDefaults","onHighlight","onUnhighlight","onDrop","firstChild","removeChild","lastChild","max","format","slice","preventDefault","stopPropagation","HTMLElement","previewHtml","previewJs","btnUploader","dropUploader","btnUploaderMultiple","btnUploaderAccept","btnUploaderMaxFiles","btnUploaderMaxSize","require","checked","console","className"],"mappings":"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","file":"main.6dce757bf03549ce7621.js","sourcesContent":["export default \"<vr-file-upload-preview\\r\\n    class=\\\"custom-wrapper\\\"\\r\\n    accept=\\\".png,.jpg,.jpeg,.gif\\\"\\r\\n    max-files=\\\"3\\\"\\r\\n    max-size=\\\"55000\\\"\\r\\n    multiple\\r\\n>\\r\\n    <button class=\\\"custom-button\\\">\\r\\n        Upload\\r\\n    </button>\\r\\n</vr-file-upload-preview>\\r\\n\";","export default \"import 'vr-file-upload-preview';\\r\\nimport 'vr-file-upload-preview/vr-file-upload-preview.min.css';\\r\\n\\r\\nconst uploader = document.querySelector('vr-file-upload-preview');\\r\\n\\r\\nuploader.addEventListener('change', (e) => {\\r\\n    console.log(e.detail.files);\\r\\n    // console.log(uploader.files);\\r\\n});\\r\\n\\r\\nuploader.addEventListener('error', (e) => {\\r\\n    const {file, type} = e.detail;\\r\\n\\r\\n    console.log({file, type});\\r\\n});\\r\\n\";","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export function changeAttributes(element, attributes) {\r\n    attributes?.forEach((attr) => {\r\n        if (!attr.onlyAttr) {\r\n            element.setAttribute(attr.name, attr.value);\r\n            return;\r\n        }\r\n\r\n        attr.value ? element.setAttribute(attr.name, attr.value) : element.removeAttribute(attr.name);\r\n    });\r\n}\r\n\r\nexport function createElement(tag, content, property) {\r\n    const node = document.createElement(tag);\r\n\r\n    if (property?.attributes?.length) {\r\n        property.attributes.forEach((element) => {\r\n            if (element.onlyAttr && !element.value) {\r\n                return;\r\n            }\r\n\r\n            node.setAttribute(element.name, element.value);\r\n        });\r\n    }\r\n\r\n    if (property?.classes?.length) {\r\n        node.classList.add(...property.classes);\r\n    }\r\n\r\n    if (property?.styles) {\r\n        Object.assign(node.style, property.styles);\r\n    }\r\n\r\n    if (content) {\r\n        node.textContent = content;\r\n    }\r\n\r\n    return node;\r\n}\r\n","export function dispatchEvent(event, element, detail) {\r\n    element.dispatchEvent(\r\n        new CustomEvent(event, {\r\n            bubbles: false,\r\n            composed: true,\r\n            detail,\r\n        })\r\n    );\r\n}\r\n","import './styles/index.less';\r\n\r\nimport { changeAttributes, createElement, dispatchEvent, getSize } from './utils';\r\n\r\nexport const VR_FILE_ERROR_TYPE = {\r\n    FORMAT: 'FORMAT',\r\n    MAX_FILES: 'MAX_FILES',\r\n    MAX_SIZE: 'MAX_SIZE',\r\n};\r\n\r\nexport const VR_FILE_CLASS = {\r\n    PREVIEW: 'vr-preview',\r\n    IMAGE: 'vr-preview-image',\r\n    REMOVE: 'vr-preview-remove',\r\n    SOURCE: 'vr-preview-source',\r\n    INFO: 'vr-preview-info',\r\n    HIGHLIGHT: 'vr-highlight-dropzone'\r\n};\r\n\r\ncustomElements.define(\r\n    'vr-file-upload-preview',\r\n    class extends HTMLElement {\r\n        /** The current selected files. */\r\n        files = [];\r\n        /** Sign that the component is rendered. */\r\n        rendered;\r\n        /** Reference to input element for file selection. */\r\n        inputRef;\r\n        /** Reference to button element. */\r\n        uploadRef;\r\n        /** Reference to container for displaying file previews. */\r\n        containerRef;\r\n\r\n        static get observedAttributes() {\r\n            return ['preview', 'multiple', 'accept', 'max-files', 'max-size'];\r\n        }\r\n\r\n        /** A selector or group of selectors pointing to the container for previewing files. */\r\n        get preview() {\r\n            return this.getAttribute('preview');\r\n        }\r\n\r\n        /** Acceptable file types. */\r\n        get accept() {\r\n            return this.getAttribute('accept');\r\n        }\r\n\r\n        /** Multiple selection of files. */\r\n        get multiple() {\r\n            const value = this.getAttribute('multiple');\r\n\r\n            return value === '' || value === 'true';\r\n        }\r\n\r\n        /** Maximum number of files. */\r\n        get maxFiles() {\r\n            const value = parseInt(this.getAttribute('max-files'));\r\n\r\n            return !isNaN(value) ? value : null;\r\n        }\r\n\r\n        /** Maximum file size. */\r\n        get maxSize() {\r\n            const value = parseInt(this.getAttribute('max-size'));\r\n\r\n            return !isNaN(value) ? value : null;\r\n        }\r\n\r\n        /** File drag and drop. */\r\n        get dropzone() {\r\n            const value = this.getAttribute('dropzone');\r\n\r\n            return value === '' || value === 'true';\r\n        }\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        onSelect = (e) => this.inputRef.click();\r\n\r\n        onChange = (e) => this.changeHandler(e);\r\n\r\n        onRemove = (e) => this.removeHandler(e);\r\n\r\n        onDrop = (e) => this.filesHandler(e.dataTransfer.files);\r\n\r\n        onHighlight = (e) => this.uploadRef.classList.add(VR_FILE_CLASS.HIGHLIGHT);\r\n\r\n        onUnhighlight = (e) => this.uploadRef.classList.remove(VR_FILE_CLASS.HIGHLIGHT);\r\n\r\n        connectedCallback() {\r\n            this.render();\r\n            this.rendered = true;\r\n        }\r\n\r\n        disconnectedCallback() {\r\n            this.defaultEventListners(false);\r\n            this.dragOnDropEventListners(false);\r\n        }\r\n\r\n        attributeChangedCallback(name, oldValue, newValue) {\r\n            if (!this.rendered) {\r\n                return;\r\n            }\r\n\r\n            switch (name) {\r\n                case 'accept':\r\n                case 'max-files':\r\n                case 'max-size': {\r\n                    changeAttributes(this.inputRef, [{ name, value: newValue }]);\r\n                    return;\r\n                }\r\n                case 'multiple': {\r\n                    changeAttributes(this.inputRef, [\r\n                        {\r\n                            name,\r\n                            value: newValue === '' || newValue === 'true',\r\n                            onlyAttr: true,\r\n                        },\r\n                    ]);\r\n                    return;\r\n                }\r\n                case 'preview': {\r\n                    this.buildPreviewPanel();\r\n                    this.containerRef.addEventListener('click', this.onRemove);\r\n                    return;\r\n                }\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const shadowRoot = this.attachShadow({ mode: 'open' });\r\n            const slot = createElement('slot');\r\n\r\n            this.inputRef = createElement('input', null, {\r\n                attributes: [\r\n                    { name: 'multiple', value: this.multiple, onlyAttr: true },\r\n                    { name: 'dropzone', value: this.dropzone, onlyAttr: true },\r\n                    { name: 'accept', value: this.accept },\r\n                    { name: 'max-files', value: this.maxFiles },\r\n                    { name: 'max-size', value: this.maxSize },\r\n                    { name: 'type', value: 'file' },\r\n                ],\r\n                styles: { display: 'none' },\r\n            });\r\n            shadowRoot.appendChild(this.inputRef);\r\n            this.inputRef.insertAdjacentElement('afterend', slot);\r\n            this.uploadRef = slot.assignedNodes()[1];\r\n\r\n            this.buildPreviewPanel();\r\n            this.setEventListners();\r\n        }\r\n\r\n        removeHandler(event) {\r\n            if (!event.target.dataset.name) {\r\n                return;\r\n            }\r\n\r\n            const { name } = event.target.dataset;\r\n            const block = this.containerRef\r\n                .querySelector(`[data-name=\"${name}\"]`)\r\n                .closest(`.${VR_FILE_CLASS.IMAGE}`);\r\n\r\n            this.files = this.files.filter((file) => file.name !== name);\r\n            dispatchEvent('change', this, { files: this.files });\r\n            block.remove();\r\n\r\n            if (!this.files.length) {\r\n                this.inputRef.value = '';\r\n            }\r\n        }\r\n\r\n        changeHandler(event) {\r\n            const files = Array.from(event.target.files);\r\n\r\n            this.filesHandler(files)\r\n        }\r\n\r\n        filesHandler(files) {\r\n            const cache = [];\r\n\r\n            if (!files.length) {\r\n                return;\r\n            }\r\n\r\n            this.inputRef.value = '';\r\n            Array.from(files).forEach((file, index) => {\r\n                const errorType = this.errorHandler(file, index);\r\n\r\n                if (errorType) {\r\n                    return dispatchEvent('error', this, {\r\n                        file,\r\n                        type: errorType,\r\n                    });\r\n                }\r\n\r\n                if (this.files.some(value => value.name === file.name && value.size === file.size)) {\r\n                    return;\r\n                }\r\n\r\n                this.buildTemplate(file);\r\n                cache.push(file);\r\n            });\r\n\r\n            if (cache.length) {\r\n                this.files = [...this.files, ...cache];\r\n                dispatchEvent('change', this, { files: this.files });\r\n            }\r\n        }\r\n\r\n        errorHandler(file, count) {\r\n            const accept = this.accept?.replace(/ /g,'');\r\n\r\n            if (accept && !accept.split(',').some((type) => file.type.match(type))) {\r\n                return VR_FILE_ERROR_TYPE.FORMAT;\r\n            }\r\n\r\n            if (typeof this.maxFiles === 'number' && (count >= this.maxFiles || this.files.length >= this.maxFiles)) {\r\n                return VR_FILE_ERROR_TYPE.MAX_FILES;\r\n            }\r\n\r\n            if (typeof this.maxSize === 'number' && file.size > this.maxSize) {\r\n                return VR_FILE_ERROR_TYPE.MAX_SIZE;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        buildPreviewPanel() {\r\n            this.containerRef?.remove();\r\n            this.containerRef = document.querySelector(this.preview);\r\n\r\n            if (!this.containerRef) {\r\n                this.containerRef = createElement('div', null, {\r\n                    classes: [VR_FILE_CLASS.PREVIEW],\r\n                });\r\n                this.insertAdjacentElement('afterend', this.containerRef);\r\n            }\r\n        }\r\n\r\n        buildTemplate(file) {\r\n            if (!file.type.match('image')) {\r\n                this.containerRef.insertAdjacentHTML(\r\n                    'afterbegin',\r\n                    this.getTemplatePreviewImage(file)\r\n                );\r\n\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = ({target}) => this.containerRef.insertAdjacentHTML(\r\n                'afterbegin',\r\n                this.getTemplatePreviewImage(file, target.result)\r\n            );\r\n            reader.readAsDataURL(file);\r\n        }\r\n\r\n        getTemplatePreviewImage(file, source) {\r\n            return `\r\n                <div class=\"${VR_FILE_CLASS.IMAGE}\">\r\n                    <div\r\n                        class=\"${VR_FILE_CLASS.REMOVE}\"\r\n                        data-name=\"${file.name}\"\r\n                    >\r\n                        &times;\r\n                    </div>\r\n                    <div\r\n                        class=\"${VR_FILE_CLASS.SOURCE}\"\r\n                        style=\"${source ? `background-image: url(${source})` : ''}\"\r\n                    >\r\n                        ${source ? '' : file.type}\r\n                    </div>\r\n                    <div class=\"${VR_FILE_CLASS.INFO}\">\r\n                        <span>${this.getShortName(file.name)}</span>\r\n                        ${getSize(file.size)}\r\n                    </div>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        setEventListners() {\r\n            this.defaultEventListners();\r\n\r\n            if (this.dropzone) {\r\n                this.dragOnDropEventListners();\r\n            }\r\n        }\r\n\r\n        defaultEventListners(set = true) {\r\n            const action = set ? 'addEventListener' : 'removeEventListener';\r\n\r\n            this.uploadRef[action]('click', this.onSelect);\r\n            this.inputRef[action]('change', this.onChange);\r\n            this.containerRef[action]('click', this.onRemove);\r\n        }\r\n\r\n        dragOnDropEventListners(set = true) {\r\n            const action = set ? 'addEventListener' : 'removeEventListener';\r\n\r\n            // Prevent default drag behaviors\r\n            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName =>\r\n                this.uploadRef[action](eventName, this.preventDefaults)\r\n            );\r\n\r\n            // Highlight drop area when item is dragged over it\r\n            ['dragenter', 'dragover'].forEach(eventName => this.uploadRef[action](eventName, this.onHighlight));\r\n            ['dragleave', 'drop'].forEach(eventName => this.uploadRef[action](eventName, this.onUnhighlight));\r\n\r\n            // Handle dropped files\r\n            this.uploadRef[action]('drop', this.onDrop)\r\n        }\r\n\r\n        clear() {\r\n            while (this.containerRef.firstChild) {\r\n                this.containerRef.removeChild(this.containerRef.lastChild);\r\n            }\r\n\r\n            this.inputRef.value = '';\r\n            this.files = [];\r\n\r\n            dispatchEvent('change', this, { files: this.files });\r\n        }\r\n\r\n        getShortName(value, max = 12) {\r\n            const [name, format] = value.split('.');\r\n\r\n            return `${name.slice(0, max)}.${format}`\r\n        }\r\n\r\n        preventDefaults(e) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n        }\r\n    }\r\n);\r\n","export function getSize(bytes) {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n\r\n    if (!bytes) {\r\n        return '0 Byte';\r\n    }\r\n\r\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n\r\n    return `${Math.round(bytes / Math.pow(1024, i))} ${sizes[i]}`;\r\n}\r\n","import './styles/index.less';\r\n\r\nimport '../src/index.js';\r\nimport '../src/styles/index.less';\r\n\r\nconst previewHtml = document.querySelector('[data-language=\"html\"]');\r\nconst previewJs = document.querySelector('[data-language=\"javascript\"]');\r\n\r\nconst btnUploader = document.querySelector('.button-uploader');\r\nconst dropUploader = document.querySelector('.dropzone-uploader');\r\n\r\nconst btnUploaderMultiple = btnUploader.getAttribute('multiple');\r\nconst btnUploaderAccept = btnUploader.getAttribute('accept');\r\nconst btnUploaderMaxFiles = btnUploader.getAttribute('max-files');\r\nconst btnUploaderMaxSize = btnUploader.getAttribute('max-size');\r\n\r\nconst multiple = document.querySelector('#multiple');\r\nconst accept = document.querySelector('#accept');\r\nconst maxFiles = document.querySelector('#max-files');\r\nconst maxSize = document.querySelector('#max-size');\r\n\r\npreviewHtml.textContent = require('!raw-loader!./examples/vr-file-uploader.html').default;\r\npreviewJs.textContent = require('!raw-loader!./examples/vr-file-uploader.js').default;\r\n\r\nmultiple.checked = btnUploaderMultiple === '' || btnUploaderMultiple === 'true';\r\naccept.value = btnUploaderAccept;\r\nmaxFiles.value = btnUploaderMaxFiles;\r\nmaxSize.value = btnUploaderMaxSize;\r\n\r\nmultiple.addEventListener('change', e => {\r\n    btnUploader.setAttribute('multiple', e.target.checked);\r\n    dropUploader.setAttribute('multiple', e.target.checked);\r\n});\r\n\r\naccept.addEventListener('change', e => {\r\n    btnUploader.setAttribute('accept', e.target.value);\r\n    dropUploader.setAttribute('accept', e.target.value);\r\n});\r\n\r\nmaxFiles.addEventListener('change', e => {\r\n    btnUploader.setAttribute('max-files', e.target.value);\r\n    dropUploader.setAttribute('max-files', e.target.value);\r\n});\r\n\r\nmaxSize.addEventListener('change', e => {\r\n    btnUploader.setAttribute('max-size', e.target.value);\r\n    dropUploader.setAttribute('max-size', e.target.value);\r\n});\r\n\r\n[btnUploader, dropUploader].forEach(element => {\r\n    element.addEventListener('change', (e) => {\r\n        console.log(element.className, e.detail.files);\r\n        // console.log(uploader.files);\r\n    });\r\n});\r\n\r\n[btnUploader, dropUploader].forEach(element => {\r\n    btnUploader.addEventListener('error', (e) => {\r\n        const {file, type} = e.detail;\r\n\r\n        console.log(element.className, {file, type});\r\n    });\r\n});\r\n\r\n"],"sourceRoot":""}